@string-sulu: multiply(@string-color, @sulu);
@js-string-color: hsl(74, 50%, 55%);

:host {
  .source.ts {

    // variables
    .variable {
      color: hsl(220, 10%, 75%);
      font-weight: normal;
    }

    // "this"
    .variable.this {
      color: @orange;
    }

    // Functions
    .entity.name.function {
      color: @eton-blue;
    }

    // Decorators
    .decorator > .entity.name.function, .decorator > .decorator {
      color: @pacific-blue;
    }

    // strings
    .string.quoted.single {
      color: @js-string-color;
    }
    .string.quoted.double {
      color: @js-string-color;
    }
    .string.begin + .entity.name.function,
    .string.begin:first-child,
    .string.end:last-child,
    .leading-whitespace + .string.begin,
    .entity.name.function + .string.end {
      color: saturate(lighten(@string-sulu, 10%), 10%);
    }
    .string.quoted.single {
      &,
      & > .string.begin,
      & > .string.end {
        color: saturate(lighten(@string-sulu, 10%), 10%);
      }
    }
    .meta.brace.round + .string.quoted.single * {
      color: saturate(lighten(@string-sulu, 10%), 10%);
    }
    .meta.brace.round + .string.quoted.double * {
      color: saturate(lighten(@string-sulu, 10%), 10%);
    }

    // arguments
    .variable.parameter {
      font-weight: 200;
      color: hsl(300, 35%, 70%);
      font-style: italic;
    }

    // logical operators
    .leading-whitespace ~ .keyword.operator {
      color: spin(saturate(darken(@js-foreground-color, 30%),70%), 330);
      // font-weight: normal;
    }
  }
}
